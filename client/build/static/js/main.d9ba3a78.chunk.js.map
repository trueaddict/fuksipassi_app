{"version":3,"sources":["components/Service.js","components/Login.js","components/Header.js","components/Info.js","components/Task.js","components/Tasks.js","components/Policy.js","components/Requests.js","components/SetupTasks.js","components/SetupUsers.js","components/Setup.js","Linkin_logo.png","components/Frontpage.js","components/Gdpr.js","config/Config.js","App.js","index.js"],"names":["url","loginUser","creds","a","fetch","method","headers","body","JSON","stringify","then","data","json","deleteUser","user","fetchTasks","id_jarj","updateTasks","tasks","createTask","task","deleteTask","createRequest","msg","temp","id","user_id","approveRequests","requests","deleteRequest","req","request_id","fetchUsers","fetchSetupData","fetchData","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","parseName","useremail","split","includes","firstName","slice","indexOf","charAt","toUpperCase","lastName","lastIndexOf","length","Login","setUser","setCookie","cookies","theme","setEmail","password","setPassword","errors","setErrors","onSubmit","e","preventDefault","Service","temp_user","path","email","bodyBackgroundColor","class","style","navBackgroundColor","href","navTextColor","name","className","accentBackgroundColor","type","placeholder","pattern","required","onChange","target","value","button","Header","direction","colunm_width","push","Grid","container","spacing","item","xs","website_url","src","icon_url","alt","marginTop","onClick","Info","info_1","info_2","info_3","Task","message","setMessage","sended","setSended","approved","setApproved","sendRequest","event","lahetetty","suoritettu","num","kuvaus","Tasks","open","setOpen","setTasks","size","console","log","tehtavat","falses","Object","keys","key","orderNum","sort","b","orderKeys","map","wordWrap","tempOpen","assign","handleClick","taskButton","Policy","handleNo","new_user","isnewuser","Requests","row","setRow","setData","handleSubmit","reqToSubmit","i","j","checked","handleChange","tempData","handleReject","index","newRow","backgroundColor","task_desc","marginLeft","req_text","SetupTasks","Map","types","setTypes","showNew","setShowNew","showNewType","setShowNewType","addedNew","setAddedNew","setNewType","newNum","setNum","newType","setType","newDesc","setDesc","tempTasks","get","parseInt","handleDelete","handleNewTask","submitNewTask","init","handleTypeEdit","tempTypes","set","type_order","handleTypeNew","nextIndex","handleTypeRemove","delete","tempNewTypes","entries","entry","handleSave","async","margin","marginRight","Array","from","defaultValue","borderTop","for","marginBottom","desc","SetupUsers","approved_task_count","task_count","borderBottom","categories","category","approved_type_count","type_count","Math","round","approved_type_percent","TabPanel","props","children","other","role","hidden","useStyles","makeStyles","primary","color","Setup","setValue","contentWidth","Tabs","newValue","textColor","indicatorColor","TabIndicatorProps","background","variant","centered","Tab","label","Frontpage","linkki_logo","Gdpr","ainejarj","yhteyshenk","syrinx","sporticus","linkkijkl","App","useCookies","themes","Config","is_admin","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d9ba3a78.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\n//const url = 'http://127.0.0.1:5000';\nconst url = 'https://fuksipassi-react.herokuapp.com';\n\nconst loginUser = async (creds) => {\n    return fetch(url+'/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(creds)\n    })\n    .then(data => data.json())\n};\n\nconst deleteUser = async (user) => {\n    return fetch(url+'/signout', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user)\n    })\n    .then(data => data.json())\n}\n\n\nconst fetchTasks = async (user) => {\n  return fetch(url+'/tasks?jarj_id='+user.id_jarj, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  .then(data => data.json())\n}\n\n\nconst updateTasks = async (tasks) => {  \n  return fetch(url+'/update_tasks', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(tasks)\n  })\n  .then(data => data.json())\n}\n\nconst createTask = async (task) => {\n  return fetch(url+'/create_task', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(task)\n  })\n  .then(data => data.json())\n}\n\nconst deleteTask = async (task) => {\n  fetch(url+'/delete_task', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(task)\n  })\n}\n\nconst createRequest = async (task, user, msg) => {\n  let temp = {};\n  temp['task'] = task.id;\n  temp['user'] = user.user_id;\n  temp['jarj'] = user.id_jarj;\n  temp['message'] = msg;\n  return fetch(url+'/create_request', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(temp)\n  })\n  .then(data => data.json())\n}\n\n\nconst approveRequests = async (user, requests) => {\n  let temp = {};\n  temp['requests'] = requests;\n  temp['user_id'] = user.user_id;\n  fetch(url+'/approve_requests', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(temp)\n  })\n}\n\n\nconst deleteRequest = async (req) => {\n  let temp = {};\n  temp['request_id'] = req.request_id;\n  fetch(url+'/delete_request', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(temp)\n  })\n}\n\nconst fetchUsers = async (user) => {\n  let temp = {};\n  temp['jarj_id'] = user.id_jarj;\n  return fetch(url+'/setup_users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(temp)\n  })\n  .then(data => data.json())\n}\n\nconst fetchSetupData = async (user) => {\n  return fetch(url+'/data_setup', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(user)\n  })\n  .then(data => data.json())\n}\n\nconst fetchData = async (user) => {\n    return fetch(url+'/data?token='+user.user_id, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(data => data.json())\n}\n\n\nconst parseName = (useremail) => {\n  let temp = useremail.split('@')[0];\n  if (temp.includes('.')) {\n    let firstName = temp.slice(0, temp.indexOf('.'));\n    firstName = firstName.charAt(0).toUpperCase() + firstName.slice(1);\n    let lastName = temp.slice(temp.lastIndexOf('.')+1, temp.length);\n    lastName = lastName.charAt(0).toUpperCase() + lastName.slice(1);\n    return firstName + ' ' + lastName;\n  }\n  return temp;\n}\n\n\n// Hook\nconst useWindowSize = () => {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n  \n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n  \n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n  \n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n  \n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n  \n    return windowSize;\n}\n\nexport default {loginUser, deleteUser, fetchData, useWindowSize, fetchTasks, updateTasks, createTask, deleteTask, createRequest, fetchSetupData, approveRequests, deleteRequest, fetchUsers, parseName};","import React, {useState, useEffect} from 'react';\nimport Service from './Service';\n\nconst Login = ({ setUser, id_jarj, setCookie, cookies, theme }) => {\n    const [useremail, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [errors, setErrors] = useState();\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        const user = {\n            useremail: useremail,\n            password: password,\n            id_jarj: id_jarj\n        }\n        const temp_user = await Service.loginUser(user);\n        if (temp_user.user_id) {\n            setUser(temp_user);\n            setCookie('useremail', user.useremail, {path: '/'});\n            setCookie('password', user.password, {path: '/'});\n        } else {\n            setErrors(true);\n        }\n    }\n\n    useEffect(() => {\n        (async () => {\n            let email = cookies.useremail;\n            let password = cookies.password;\n            if (email != null && password != null) {\n                const user = {\n                    useremail: email,\n                    password: password,\n                    id_jarj: id_jarj\n                }\n                const temp_user = await Service.loginUser(user);\n                if (temp_user.user_id) {\n                    setUser(temp_user);\n                }\n            }\n        })();\n    }, []);\n\n\n    return (\n        <div>\n            <style>{'body {background-color:'+theme.bodyBackgroundColor+';'}</style>\n            <div class=\"nav\" style={theme.navBackgroundColor}>\n              <div class=\"row\">\n                <div class=\"center\">\n                    <div class=\"col s12 m2 brand-site\">\n                        \n                    </div>\n                    <div class=\"col s12 m4 offset-m2\">\n                        <a href=\"//\" class=\"\"><h3 class=\"brand-logo\" style={theme.navTextColor}>{theme.name}</h3></a>\n                    </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"center brand-text\">\n                <h4>Kirjaudu</h4>\n                <p>Anna isamail (yliopiston JYU) sähköposti pitkässä muodossa</p>\n                <p>Esim.</p>\n                <p><i>kalle.h.ankka@student.jyu.fi</i></p>\n            </div>\n            {errors === true && <p class=\"center error\">Väärä sähköposti tai salasana!</p>}\n            <form className=\"kuittaus\" onSubmit={onSubmit} style={theme.accentBackgroundColor}>\n                <input type=\"email\" name=\"useremail\" placeholder=\"Sähköposti\" pattern=\".*@student.jyu.fi\" required onChange={e => setEmail(e.target.value)} />{' '}\n                <input type=\"password\" name=\"password\" placeholder=\"Ainejärjestön Salasana\" id=\"password\" required onChange={e => setPassword(e.target.value)} />{' '}\n                <div class=\"center\">\n                    <input className={theme.button} type=\"submit\" value=\"Kirjaudu\"/>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport Service from './Service';\nimport Grid from '@material-ui/core/Grid';\n\nconst Header = ({setUser, user, setCookie, theme}) => {\n    const size = Service.useWindowSize();\n    const direction = size.width <= 700 ? \"column\" : \"row\";\n    let colunm_width = [3, 6, 1, 2];\n\n    if (direction === \"column\") {\n        let temp = [];\n        for (let i of colunm_width) {\n            temp.push(0);\n        }\n        colunm_width = temp;\n    }\n\n    const handleLogout = (e) => {\n        setUser();\n        setCookie('useremail', null, {path: '/'});\n        setCookie('password', null, {path: '/'});\n    }\n\n    return (\n        <div className=\"nav\" style={theme.navBackgroundColor}>\n            <Grid container spacing={3} direction={direction}>\n                <Grid item xs={colunm_width[0]}>\n                    <div className=\"header\">\n                        <a href={theme.website_url}><img src={theme.icon_url} alt=\"\" className=\"responsive-img\" style={{marginTop:'10px'}}/></a>\n                    </div>\n                </Grid>\n                <Grid item xs={colunm_width[1]} >\n                    <div className=\"header\" style={{'textAlign':'center'}}>\n                        <a href=\"//\" className=\"\"><h3 className=\"brand-logo\" style={theme.navTextColor}>{theme.name}</h3></a>\n                    </div>\n                </Grid>\n                <Grid item xs={colunm_width[2]}>\n                    <div className=\"header\" style={theme.navTextColor}>\n                        {Service.parseName(user.useremail)}\n                    </div>\n                </Grid>\n                <Grid item xs={colunm_width[3]}>\n                    <div className=\"header\">\n                        <button onClick={handleLogout} className={theme.button} name=\"logout-submit\">Kirjaudu ulos</button>\n                    </div>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Info = ({theme}) => {\n    return (\n        <div class=\"center container\">\n            <p class=\"info-text\">{theme.info_1}</p>\n            <p class=\"info-text\">{theme.info_2}</p>\n            <p class=\"info-text info-text-last\">{theme.info_3}</p>\n        </div>\n    )\n}\n\nexport default Info;","import React, {useEffect, useState} from 'react';\nimport Service from './Service';\n\nconst Task = ({task, user, theme}) => {\n    const [message, setMessage] = useState();\n    const [sended, setSended] = useState();\n    const [approved, setApproved] = useState();\n\n    const sendRequest = async event => {\n        event.preventDefault();\n        Service.createRequest(task, user, message);\n        setSended(true);\n    }\n\n    useEffect(() => {\n        setSended(task.lahetetty);\n        setApproved(task.suoritettu);\n    }, []);\n\n    return (\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content center\">\n                <h6>Tehtävä {task.num}</h6>\n                <h5>{task.kuvaus}</h5>\n            </div>\n            <div className=\"card-action center\">\n                {sended & !approved ? <button className=\"btn brand-text grey\">Lähetetty</button> :\n                 approved ? <button className=\"btn brand-text btn-suoritettu\">Suoritettu</button>:\n                <form onSubmit={sendRequest}>\n                    <input type=\"text\" placeholder=\"Viesti / Tutorin nimi\" onChange={e => setMessage(e.target.value)}/>\n                    <button type=\"submit\" className={theme.button}>Lähetä</button>\n                </form>  }\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React, {useEffect, useState} from 'react';\nimport Service from './Service';\nimport Task from './Task';\nimport Grid from '@material-ui/core/Grid';\n\nconst Tasks = ({user, theme}) => {\n    const [open, setOpen] = useState();\n    const [tasks, setTasks] = useState([]);\n    const size = Service.useWindowSize();\n    \n    const handleClick = (event, key) => {\n        event.preventDefault();\n        const tempOpen = Object.assign({}, open);\n        tempOpen[key] = !tempOpen[key];\n        setOpen(tempOpen);\n    }\n\n    const orderKeys = (tasks) => {\n        let keys = [];\n        for (let key of Object.keys(tasks)) {\n            keys.push({'name':key, 'orderNum':tasks[key].orderNum});\n        }\n        keys.sort((a,b) => { return a.orderNum > b.orderNum });\n        return keys;\n    }\n\n    useEffect(() => {\n       (async () => {\n            const data = await Service.fetchData(user);\n            console.log(data);\n            setTasks(data.tehtavat);\n            console.log(tasks);\n       })();\n       let falses = {}\n        for (let key of Object.keys(tasks)) {\n            falses[key] = false;\n        }\n        setOpen(falses);\n    }, []);\n\n\n    const direction = size.width <= 700 ? \"column\" : \"row\";\n    const width = size.width <= 700 ? 12 : 6;\n\n    let keys = orderKeys(tasks);\n\n    return (\n        <div className=\"container\">\n            <style>\n                {'body {background-color:'+theme.bodyBackgroundColor+';'}\n            </style>\n            <h4 className=\"center gray-text\" >Tehtävät</h4>\n            {keys.length > 0 ? keys.map((key) => (\n                \n                <div className=\"\" style={{wordWrap: 'break-word'}}>\n                    <button className={`accordion ${open[key.name] ? 'active' : ''}`} type=\"button\" onClick={(event) => handleClick(event, key.name)} style={theme.taskButton}>\n                        <h5>{key.name}</h5>\n                        <br></br>\n                        <h6>{tasks[key.name]['suoritettu']} / {tasks[key.name]['kpl']}</h6>\n                    </button>\n                    <div className={`panel ${open[key.name] ? 'show' : ''}`}>\n                    <Grid container spacing={2} direction={direction}>\n                        {tasks[key.name]['tehtavat'].length > 0 ? tasks[key.name]['tehtavat'].map((task) => (\n                            <Grid key={task.id} item xs={width}>\n                                <Task task={task} user={user} theme={theme}/>\n                            </Grid>\n                        )) : null}\n                    </Grid>\n                    </div>\n                </div>\n            \n\n            )): null}\n        </div>\n    )\n}\n\nexport default Tasks;","import React from 'react';\nimport Service from './Service';\n\nconst Policy = ({user, setUser}) => {\n    const handleYes = e => {\n        const new_user = Object.assign({}, user);\n        new_user.isnewuser = false;\n        setUser(new_user);\n    }\n    \n    const handleNo = async e => {\n        e.preventDefault();\n        const temp_user = {\n            user_id:user.user_id\n        }\n        const ret = await Service.deleteUser(temp_user);\n        setUser();\n    }\n    \n    return (\n        <div>\n            <div className=\"policy\">\n                <h5 className=\"center gray-text\">Luodaanko uusi käyttäjä?</h5>\n                <p className=\"center brand-text\">Email</p>\n                <p className=\"center gray-text\">Luomalla käyttäjän hyväksyt palvelun käyttöehdot sekä <a href=\"/gdpr\" target=\"_blank\">rekisteri- ja tietosuojaselosteen</a></p>\n                <div className=\"center margin-top-bottom\"><button onClick={handleYes} className=\"btn black\">Kyllä</button></div>\n                <div className=\"center margin-top-bottom\"><button onClick={handleNo} className=\"btn grey lighten-1\">Ei</button></div>\n                \n            </div>\n            <div className=\"policy-background\"></div>\n        </div>\n    )\n}\n\nexport default Policy;","import { Grid } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react';\nimport Service from './Service';\n\nconst Requests = ({user, theme}) => {\n    const [row, setRow] = useState();\n    const [data, setData] = useState();\n\n    useEffect(() => {\n        (async () => {\n            const data = await Service.fetchSetupData(user);\n            console.log(data);\n            setData(data);\n        })();\n    }, []);\n    \n\n    const handleSubmit = async (event, temp) => {\n        event.preventDefault();\n        let reqToSubmit = [];\n        for (let i of data) {\n            if (i.user_id === temp.user_id) {\n                for (let j of i.requests) {\n                    if (j.checked) {\n                        reqToSubmit.push(j);\n                    }\n                }\n            }\n        }\n        await Service.approveRequests(user, reqToSubmit);\n        (async () => {\n            const data = await Service.fetchSetupData(user);\n            console.log(data);\n            setData(data);\n        })();\n    }\n\n    const handleChange = async (event, temp, req) => {\n        console.log(temp);\n        console.log(req);\n        console.log(event.target.checked);\n\n        let tempData = Object.assign([], data);\n        for (let i of tempData) {\n            if (i.user_id === temp.user_id) {\n                for (let j of i.requests) {\n                    if (j.request_id === req.request_id) {\n                        j.checked = !j.checked;\n                    }\n                }\n            }\n        }\n        setData(tempData);\n    }\n\n    const handleReject = async (event,req) => {\n        event.preventDefault();\n        (async () => {\n            await Service.deleteRequest(req);\n            const data = await Service.fetchSetupData(user);\n            console.log(data);\n            setData(data);\n        })();\n    }\n\n    const handleClick = (event, newRow) => {\n        if (row === newRow) {\n            setRow();    \n        } else {\n            setRow(newRow);\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <ul>\n                    {data !== undefined ? data.map((temp, index) => (\n                        temp.requests.length > 0 ? \n                        <li key={index}>\n                            <div className=\"collapsible-header\" onClick={(event) => handleClick(event, index)}> {Service.parseName(temp.useremail)}</div>\n                            <div className={`${row===index ? 'collapsible-body' : 'hidden'} `} style={{backgroundColor:'#4f4f4f4a'}} >\n                                <form onSubmit={(event) => handleSubmit(event, temp)}>\n                                    <div>\n                                        <button className={theme.button}>Kuittaa valitut</button>\n                                    </div>\n                                    <div>\n                                        <ul>\n                                            {temp.requests.map((req, index) => (\n                                                <li key={index}>\n                                                    <div style={{marginTop:'1rem'}}>\n                                                        <Grid container spacing={3}>\n                                                            <Grid item xs={9}>\n                                                                <div>\n                                                                    <label className=\"brand-text\">\n                                                                        <input type=\"checkbox\" className='yellow-checkbox' checked={req.checked} onChange={(event) => handleChange(event, temp, req)}/>\n                                                                        <span className=\"margin-bottom\">{req.task_desc}</span>\n                                                                        <div className=\"small-margin-left font-13\" style={{marginLeft:'3rem'}}>{req.req_text}</div>\n                                                                    </label>\n                                                                </div>\n                                                            </Grid>\n                                                            <Grid item xs={3}>\n                                                                <button className='btn-small grey' onClick={(event) => handleReject(event, req)}>Hylkää</button>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                </form>\n                            </div>\n                        </li>\n                    : null)) : null} \n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default Requests;","import React, {useEffect, useState} from 'react';\nimport Service from './Service';\n\nconst SetupTasks = ({user, theme}) => {\n  const [tasks, setTasks] = useState([]);\n  const [types, setTypes] = useState(new Map());\n  const [showNew, setShowNew] = useState(false);\n  const [showNewType, setShowNewType] = useState(false);\n  const [addedNew, setAddedNew] = useState(false);\n\n  const [type, setNewType] = useState('');\n\n  const [newNum, setNum] = useState();\n  const [newType, setType] = useState(1);\n  const [newDesc, setDesc] = useState();\n\n\n  const handleChange = async (event, temp) => {\n    console.log(event.target.value);\n    console.log(event.target.id);\n    let tempTasks = Object.assign([], tasks);\n\n    for (let task of tempTasks) {\n      if (task.id === temp.id) {\n        if (event.target.id === 'type') {\n          task[event.target.id] = types.get(parseInt(event.target.value));\n          task['type_order'] = parseInt(event.target.value);\n        } else {\n          task[event.target.id] = event.target.value;\n        }\n      }\n    }\n    console.log(tempTasks);\n    setTasks(tempTasks);\n  };\n\n  const handleDelete = async (event, temp) => {\n    await Service.deleteTask(temp);\n    let tempTasks = [];\n    for (let task of tasks) {\n      if (task.id !== temp.id) {\n        tempTasks.push(task);\n      }\n    }\n    setTasks(tempTasks);\n  };\n\n  const handleNewTask = async event => {\n    setShowNew(!showNew);\n    setNum();\n    setType(1);\n    setDesc();\n  }\n\n  const submitNewTask = async event => {\n    event.preventDefault();\n    (async () => {\n      let temp = {}\n      temp['num'] = parseInt(newNum);\n      temp['type'] = types.get(parseInt(newType));\n      temp['typeOrder'] = parseInt(newType);\n      temp['desc'] = newDesc;\n      temp['jarj_id'] = user.id_jarj;\n      setAddedNew(true);\n      console.log(temp);\n      await Service.createTask(temp);\n      await init();\n    })();\n  };\n\n  const handleTypeEdit = async (event, key) => {\n    event.preventDefault();\n    console.log(event.target[0].value);\n    \n    let tempTypes = new Map(types);\n\n    tempTypes.set(key, event.target[0].value);\n\n    console.log(tempTypes);\n\n    let tempTasks = Object.assign([], tasks);\n    console.log(tempTasks);\n\n    for (let task of tempTasks) {\n      task.type = tempTypes.get(task.type_order);\n    }\n    setTasks(tempTasks);\n    setTypes(tempTypes);\n  }\n\n  const handleTypeNew = async (event, nextIndex) => {\n    if (type === '') return;\n    \n    let tempTypes = new Map(types);\n    tempTypes.set(nextIndex, type);\n\n    console.log(tempTypes);\n    setTypes(tempTypes);\n    setNewType('');\n  }\n\n  const handleTypeRemove = async (event, key) => {\n    let tempTypes = new Map(types);\n\n    tempTypes.delete(key);\n    console.log(tempTypes);\n    setTypes(new Map());\n    let tempNewTypes = new Map();\n    let i = 1;\n    for (let entry of tempTypes.entries()) {\n      console.log(entry);\n      tempNewTypes.set(i, entry[1]);\n      i++;\n    }\n    console.log(tempNewTypes);\n    setTypes(tempNewTypes);\n  }\n\n  const handleSave = async event => {\n    await Service.updateTasks(tasks);\n    await init();\n  }\n\n  const init = async => {\n    (async () => {\n      const data = await Service.fetchTasks(user);\n      let tempData = Object.assign([], data);\n      tempData.sort((a,b) => { \n        if (a.type_order > b.type_order) return 1;\n        if (a.type_order < b.type_order) return -1;\n        if (a.num > b.num) return 1;\n        if (a.num < b.num) return -1;\n        return 0;\n      })\n      console.log(tempData);\n      setTasks(tempData);\n      const tempTypes = new Map();\n      for (let task of data.sort((a,b) => { return a.type_order > b.type_order })) {\n        tempTypes.set(task.type_order, task.type);\n      }\n      console.log(tempTypes);\n      setTypes(tempTypes);\n    })();\n  }\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <>\n      <div style={{margin:'1rem', 'paddingBottom':'1rem' , 'overflow-x':'auto','whiteSpace':'nowrap'}}>\n        <button onClick={(event) => handleSave(event)} className={theme.button} style={{marginRight:'1rem'}}>Tallenna muutokset</button>\n        <button onClick={(event) => handleNewTask(event)} className={theme.button}>Lisää tehtävä</button>\n        <button onClick={(event) => setShowNewType(!showNewType)} className={theme.button} style={{marginLeft:'1rem'}}>Lisää kategoria</button>\n      </div>\n      {showNewType ? \n        <div className='collection'>\n          <div className='collection-item' style={{width:'100%', 'padding':'0rem 0rem 0rem 1rem'}}>\n            { types !== undefined ? Array.from(types).map(([key, temp], index) => (\n              <div key={temp}>\n                <form onSubmit={(event => handleTypeEdit(event, key))}>\n                  {key}. \n                  <div className='input-field inline'>\n                    <input type='text' defaultValue={temp}></input>\n                  </div>\n                  <button type='submit' className={`btn-floating `+ theme.button} style={{marginLeft:'1rem'}}><i class=\"material-icons\">save</i></button>\n                  <button onClick={(event) => handleTypeRemove(event, key)} className={`btn-floating `+theme.button} style={{marginLeft:'1rem'}}><i class=\"material-icons\">clear</i></button>\n                </form>\n              </div>\n            )) : null}\n            <div style={{borderTop: '2px solid #c4c4c4'}}>\n              <div className='center'>\n                <p>Lisää kategoria</p>\n              </div>\n              {Array.from(types).length+1}. \n              <div className='input-field inline'>\n                <input type='text' value={type} onChange={(event) => setNewType(event.target.value)}></input>\n              </div>\n              <button onClick={(event) => handleTypeNew(event, Array.from(types).length+1)} className={theme.button} style={{marginLeft:'1rem'}}>Lisää</button>\n            </div>\n          </div>\n        </div> : null}      \n      <div>  \n        {showNew ? \n            <div className='collection'>\n              <div className='collection-item'>\n                <p className='center'>Uusi tehtävä</p>\n                {addedNew ? <p>Uusi tehtävä lisätty!</p> : null}\n                <form onSubmit={submitNewTask}>\n                    <label for=\"num\">Numero</label>\n                    <input id=\"num\" type='number' required onChange={e => {setNum(parseInt(e.target.value));setAddedNew(false);}}></input>\n                    \n                    <label>Kategoria</label>\n                    <div className='input-field'>\n                      <select defaultValue={1} required onChange={e => {setType(e.target.value);setAddedNew(false);}}>\n                        {types !== undefined ? Array.from(types).map(([key, temp], index) => (\n                          <option value={parseInt(key)}>{temp}</option>\n                        )): null}\n                      </select>\n                    </div>\n                    \n                    <label for=\"desc\">Tehtävä</label>\n                    <input id='desc' type='text' required onChange={e => {setDesc(e.target.value);setAddedNew(false);}}></input>\n                    <input className={theme.button} type=\"submit\" value=\"Lisää\"/>\n                </form>\n              </div>\n            </div>\n          : null}\n      </div>\n      <h4 className='center'>Tehtävät</h4>\n      <ul className='collection'>\n        {tasks !== undefined ? tasks.map(temp => (\n          <li key={temp.id} className='collection-item' style={{marginBottom:'0.5rem'}}>\n            <div>\n              <form onChange={(event) => handleChange(event, temp)}>\n                <label for=\"num\">Numero</label>\n                <input id=\"num\" type='number' defaultValue={parseInt(temp.num)}></input>\n                \n                \n                <label>Kategoria</label>\n                <div className='input-field'>\n                  <select value={temp.type_order} id='type'>\n                    {types !== undefined ? Array.from(types).map(([key, temp], index) => (\n                      <option value={key}>{temp}</option>\n                    )): null}\n                  </select>\n                </div>\n                                \n                \n                \n                <label for=\"desc\">Tehtävä</label>\n                <input id='desc' type='text' defaultValue={temp.desc}></input>\n              </form>\n              <button onClick={(event) => handleDelete(event, temp)} className={theme.button}>Poista tehtävä</button>\n            </div>\n          </li>\n        )): null}\n      </ul>\n    </>\n  )\n}\n\nexport default SetupTasks;","import React, {useEffect, useState} from 'react';\nimport Service from './Service';\n\nconst SetupUsers = ({user, theme}) => {\n  const [row, setRow] = useState();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    (async () => {\n      const data = await Service.fetchUsers(user);\n      console.log(data);\n      setData(data);\n    })();\n  }, []);\n\n  const handleClick = (event, newRow) => {\n    if (row === newRow) {\n        setRow();    \n    } else {\n        setRow(newRow);\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <ul>\n          {data !== undefined ? data.map((temp, index) => (\n            <li key={index}>\n              <div className='collapsible-header' onClick={(event) => handleClick(event, index)}>{Service.parseName(temp.useremail)} - {temp.approved_task_count} / {temp.task_count}</div>\n              <div className={`${row===index ? 'collapsible-body' : 'hidden'}`} style={{backgroundColor:'#4f4f4f4a'}}>\n                <div style={{borderBottom:'2px solid #00000070'}}>\n                  <p>{temp.useremail}</p>\n                </div>\n                \n                <ul>\n                  {temp.categories.map((category, index) => (\n                    <li>\n                      <p>{category.name}:</p><p style={{marginLeft:'1rem'}}> {category.approved_type_count} / {category.type_count} - {Math.round(category.approved_type_percent)}%</p>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </li>\n          )) : null}\n        </ul>\n      </div>\n    </>\n  )\n}\n\nexport default SetupUsers;","import React, {useState} from 'react';\nimport Service from './Service';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Requests from './Requests';\nimport SetupTasks from './SetupTasks';\nimport SetupUsers from './SetupUsers';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <>{children}</>\n        )}\n      </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    primary : {\n        color: 'black'\n    }\n});\n\nconst Setup = ({user, theme}) => {\n    const [value, setValue] = useState(0);\n    const classes = useStyles();\n    const size = Service.useWindowSize();\n    const contentWidth = size.width <= 700 ? \"100%\" : \"75%\";\n\n    const handleTabChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    return (\n        <>\n            <div style={{width: contentWidth, margin: 'auto'}}>\n                <style>\n                    {'body {background-color:'+theme.bodyBackgroundColor+';'}\n                </style>\n                <Tabs value={value} onChange={handleTabChange} textColor=\"primary\" indicatorColor=\"primary\" TabIndicatorProps={{style:{background:'black', 'text-color':'black'}}} variant=\"fullWidth\" centered>\n                    <Tab label=\"Pyynnöt\" style={{color:'rgba(0, 0, 0, 0.7)'}}></Tab>\n                    <Tab label=\"Tehtävät\" style={{color:'rgba(0, 0, 0, 0.7)'}}></Tab>\n                    <Tab label=\"Käyttäjät\" style={{color:'rgba(0, 0, 0, 0.7)'}}></Tab>\n                </Tabs>\n            \n                <TabPanel value={value} index={0}>\n                    <Requests user={user} theme={theme}/>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <SetupTasks user={user} theme={theme}/>\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                    <SetupUsers user={user} theme={theme}/>\n                </TabPanel>\n            </div>\n            \n        </>\n    )\n}\n\nexport default Setup;","export default __webpack_public_path__ + \"static/media/Linkin_logo.7458fc95.png\";","import React from 'react';\nimport linkki_logo from '../Linkin_logo.png';\n\nconst Frontpage = () => {\n  return (\n    <section className=\"container\">\n      <div className=\"row\">\n        <div className=\"col s12\">\n          <h4 class=\"grey-text text-darken-3\">Klikkaa oman ainejärjestösi fuksipassiin tästä!</h4>\n        </div>\n        <div className=\"col s12 m6\">\n          <div class=\"card z-depth-0 grey lighten-4\">\n            <div class=\"card-content center card-size\">\n              <h3 class=\"\">Syrinx</h3>\n              <a href=\"/syrinx\"><img src=\"http://groups.jyu.fi/syrinx/kuvat/logot/originaalit/syrinx_logo.png\" alt=\"\" class=\"responsive-img\"/></a>\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div class=\"card z-depth-0 grey lighten-4\">\n            <div class=\"card-content center card-size\">\n              <h3 class=\"\">Linkki</h3>\n              <a href=\"/linkkijkl\"><img src={linkki_logo} alt=\"\" class=\"responsive-img\"/></a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Frontpage;","import React from 'react';\n\nconst Gdpr = () => {\n  let ainejarj_lyh = 'syrinx';\n  let ainejarj = 'Syrinx ry';\n  let yhteyshenk = 'Anette Ursin, anette.a.k.ursin@student.jyu.fi';\n\n  return ( \n    <div className=\"container\">\n      <p>Tämä on <span className=\"ainejarjesto\"></span>:n fuksipassin (fuksipassi.fi/{ainejarj_lyh}) henkilötietolain (10 ja 24 §) ja EU:n yleisen tietosuoja-asetuksen (GDPR) mukainen rekisteri- ja tietosuojaseloste. Laadittu 23.8.2020. Päivitetty 23.8.2020.</p>\n      \n      <p>1. Rekisterinpitäjä</p>\n      <p className=\"sisennys\">fuksipassi.fi / y-tunnus: 2923455-6, Vesangantie 2 I 20, 40700 Jyväskylä</p>\n      \n      <p className=\"sisennys\">Sähköposti: ville.otto@gmail.com</p>\n      \n      <p>2. Rekisteristä vastaava yhteyshenkilö</p>\n      <p className=\"sisennys\">Fuksipassi.fi:n puolesta:</p>\n      <p className=\"sisennys\">Otto Virtanen, nolla5nolla5530419, ville.otto@gmail.com</p>\n      \n      <p className=\"sisennys\">{ainejarj}:n puolesta:</p>\n      <p className=\"sisennys\">{yhteyshenk}</p>\n      \n      \n      <p>3. Rekisterin nimi</p>\n      <p className=\"sisennys\">Yhdistyksen fuksipassin käyttäjärekisteri</p>\n      \n      <p>4. Oikeusperuste ja henkilötietojen käsittelyn tarkoitus</p>\n      <p className=\"sisennys\">EU:n yleisen tietosuoja-asetuksen mukainen oikeusperuste henkilötietojen käsittelylle on rekisterinpitäjille oikeutettu etu.</p>\n      \n      <p className=\"sisennys\">Henkilötietojen käsittelyn tarkoitus on fuksipassin toiminnan mahdollistaminen.</p>\n      \n      <p className=\"sisennys\">Tietoja ei käytetä automatisoituun päätöksentekoon tai profilointiin.</p>\n      \n      \n      <p>5. Rekisterin tietosisältö</p>\n      <p className=\"sisennys\">Rekisteriin tallennettavia tietoja ovat: henkilön sähköposti, nimi (sähköpostista) ja fuksipassin suoritushistoria.</p>\n      \n      <p className=\"sisennys\">Tietoja säilytetään fuksipassin käyttöajan tai korkeintaan fuksivuoden 2020-2021 ajan.</p>\n      \n      \n      <p>6. Säännönmukaiset tietolähteet</p>\n      <p className=\"sisennys\">Rekisteriin tallennettavat tiedot saadaan käyttäjältä www-lomakkeella ensimmäisen palveluunkirjautumisen yhteydessä sekä www-lomakkeella käyttäjän suorittaessa tehtäviä.</p>\n      \n      \n      <p>7. Tietojen säännönmukaiset luovutukset ja tietojen siirto EU:n tai ETA:n ulkopuolelle</p>\n      <p className=\"sisennys\">Tietoja ei luovuteta muille tahoille.</p>\n      \n      \n      <p>8. Rekisterin suojauksen periaatteet</p>\n      <p className=\"sisennys\">Rekisterin käsittelyssä noudatetaan huolellisuutta ja tietojärjestelmien avulla käsiteltävät tiedot suojataan asianmukaisesti. Kun rekisteritietoja säilytetään Internet-palvelimilla, niiden laitteiston fyysisestä ja digitaalisesta tietoturvasta huolehditaan asiaankuuluvasti. Rekisterinpitäjä huolehtii siitä, että tallennettuja tietoja sekä palvelimien käyttöoikeuksia ja muita henkilötietojen turvallisuuden kannalta kriittisiä tietoja käsitellään luottamuksellisesti ja vain rekisterinpitäjien sekä ainejärjestön hallituksen toimesta.</p>\n      \n      \n      <p>9. Tarkastusoikeus ja oikeus vaatia tiedon korjaamista</p>\n      <p className=\"sisennys\">Jokaisella rekisterissä olevalla henkilöllä on oikeus tarkistaa rekisteriin tallennetut tietonsa ja vaatia mahdollisen virheellisen tiedon korjaamista tai puutteellisen tiedon täydentämistä. Mikäli henkilö haluaa tarkistaa hänestä tallennetut tiedot tai vaatia niihin oikaisua, pyyntö tulee lähettää sähköisesti rekisterinpitäjälle. Rekisterinpitäjä voi pyytää tarvittaessa pyynnön esittäjää todistamaan henkilöllisyytensä. Rekisterinpitäjä vastaa asiakkaalle EU:n tietosuoja-asetuksessa säädetyssä ajassa (pääsääntöisesti kuukauden kuluessa).</p>\n      \n      \n      <p>10. Muut henkilötietojen käsittelyyn liittyvät oikeudet</p>\n      <p className=\"sisennys\">Rekisterissä olevalla henkilöllä on oikeus pyytää häntä koskevien henkilötietojen poistamiseen rekisteristä (\"oikeus tulla unohdetuksi\"). Niin ikään rekisteröidyillä on muut EU:n yleisen tietosuoja-asetuksen mukaiset oikeudet kuten henkilötietojen käsittelyn rajoittaminen tietyissä tilanteissa. Pyynnöt tulee lähettää sähköisesti rekisterinpitäjälle. Rekisterinpitäjä voi pyytää tarvittaessa pyynnön esittäjää todistamaan henkilöllisyytensä. Rekisterinpitäjä vastaa asiakkaalle EU:n tietosuoja-asetuksessa säädetyssä ajassa (pääsääntöisesti kuukauden kuluessa).</p>\n      \n      \n      <br/>\n      <br/>\n\n      <p>Register and data protection description</p>\n      \n      <p>This is a register and data protection description, which has been made according to <span className=\"ainejarjesto\"></span> personal data act (10 ja 24 §) and EU’s data privacy law (GDPR). Made on 23.8.2020. Last change has been made on 23.8.2020.</p>\n      \n      <p>1. Register is owned by</p>\n      <p className=\"sisennys\">fuksipassi.fi / company ID: 2923455-6, Vesangantie 2 I 20, 40700 Jyväskylä</p>\n      \n      <p className=\"sisennys\">Email: ville.otto@gmail.com</p>\n      \n      <p>2. Person in charge of the register</p>\n      <p className=\"sisennys\">Via fuksipassi.fi:</p>\n      <p className=\"sisennys\">Otto Virtanen, 0505530419, ville.otto@gmail.com</p>\n      \n      <p className=\"sisennys\">Via {ainejarj}:</p>\n      <p className=\"sisennys\">{yhteyshenk}</p>\n      \n      <p>3. Name of the register</p>\n      <p className=\"sisennys\">The register of the users of the fuksipassi (freshman pass) of the association</p>\n      \n      \n      <p>4. Legal bases and the purpose of handling of personal information</p>\n      <p className=\"sisennys\">Register holder has a legal right to handle personal information according to the EU’s data privacy law (GDPR). The purpose of handling personal information is to enable function of the fuksipassi (freshman pass). This information is not used for automatic decision-making or profiling.</p>\n      \n      \n      <p>5. Data content of the register</p>\n      <p className=\"sisennys\">Information saved in the register: E-mail, name (from the e-mail) and the accomplishment history of the user.</p>\n      \n      <p className=\"sisennys\">Personal data is deleted after the autumn semester, at the latest at the end of spring semester 2021.</p>\n      \n      \n      <p>6. Source of information according to GDPR</p>\n      <p className=\"sisennys\">The information in the register is provided by a www-form by the user when signing in to the service for the first time and by a www-form when accoplishing tasks.</p>\n      \n      <p>7. Releasing the information outside of EU- or ETA-countries according to GDPR</p>\n      <p className=\"sisennys\">Information is not released out to third parties.</p>\n      \n      <p>8. Principles of protecting the register</p>\n      <p className=\"sisennys\">The register is handled with care and the information handled with information technology are protected accordingly. If the register-information is kept on Internet-servers, protection of the devices in which the information is held are protected accordingly. The owner of the register is responsible for making sure that the saved information or the access rights to the servers and other information relevant to the safety of personal information are handled confidentially and only by the owners of the register.</p>\n      \n      \n      <p>9. The right the revise and demand correction of personal data</p>\n      <p className=\"sisennys\">Every member whose information is on the register has a right to revise ones information saved in the register and demand a correction of possible wrongful or defective information. The request to do so must be send via e-mail to the owner of the register. The owner of the register has the right to demand verification of identity if needed. The owner of the register must reply in standard time prescribed by the EU’s data privacy law (mainly</p>\n      <p className=\"sisennys\">within a month).</p>\n      \n      <p>10. Other rights conserning the handling of personal data</p>\n      <p className=\"sisennys\">Everyone in the register has a legal right to request the deletion of ones personal data from the register (”the right to be forgotten”). Therefore a registered member has also other legal rights prescribed by the the EU’s data privacy law , f.i. the right to restrain the usage of personal information in certain situations. Requests must be send to the owner of the register via e-mail. The owner of the register has a right to demand verification of identity if needed. The owner of the register must reply in standard time prescribed by the EU’s data privacy law (mainly within a month)</p>\n\n      <p>7. Releasing the information outside of EU- or ETA-countries according to GDPR</p>\n      <p className=\"sisennys\">Information is not released out to third parties.</p>\n\n      <p>8. Principles of protecting the register</p>\n      <p className=\"sisennys\">The register is handled with care and the information handled with information technology are protected accordingly. If the register-information is kept on Internet-servers, protection of the devices in which the information is held are protected accordingly. The owner of the register is responsible for making sure that the saved information or the access rights to the servers and other information relevant to the safety of personal information are handled confidentially and only by the owners of the register.</p>\n\n\n      <p>9. The right the revise and demand correction of personal data</p>\n      <p className=\"sisennys\">Every member whose information is on the register has a right to revise ones information saved in the register and demand a correction of possible wrongful or defective information. The request to do so must be send via e-mail to the owner of the register. The owner of the register has the right to demand verification of identity if needed. The owner of the register must reply in standard time prescribed by the EU’s data privacy law (mainly</p>\n      <p className=\"sisennys\">within a month).</p>\n\n      <p>10. Other rights conserning the handling of personal data</p>\n      <p className=\"sisennys\">Everyone in the register has a legal right to request the deletion of ones personal data from the register (”the right to be forgotten”). Therefore a registered member has also other legal rights prescribed by the the EU’s data privacy law , f.i. the right to restrain the usage of personal information in certain situations. Requests must be send to the owner of the register via e-mail. The owner of the register has a right to demand verification of identity if needed. The owner of the register must reply in standard time prescribed by the EU’s data privacy law (mainly within a month)</p>\n\n      <p>7. Releasing the information outside of EU- or ETA-countries according to GDPR</p>\n      <p className=\"sisennys\">Information is not released out to third parties.</p>\n\n      <p>8. Principles of protecting the register</p>\n      <p className=\"sisennys\">The register is handled with care and the information handled with information technology are protected accordingly. If the register-information is kept on Internet-servers, protection of the devices in which the information is held are protected accordingly. The owner of the register is responsible for making sure that the saved information or the access rights to the servers and other information relevant to the safety of personal information are handled confidentially and only by the owners of the register.</p>\n\n\n      <p>9. The right the revise and demand correction of personal data</p>\n      <p className=\"sisennys\">Every member whose information is on the register has a right to revise ones information saved in the register and demand a correction of possible wrongful or defective information. The request to do so must be send via e-mail to the owner of the register. The owner of the register has the right to demand verification of identity if needed. The owner of the register must reply in standard time prescribed by the EU’s data privacy law (mainly within a month).</p>\n\n      <p>10. Other rights conserning the handling of personal data</p>\n      <p className=\"sisennys\">Everyone in the register has a legal right to request the deletion of ones personal data from the register (”the right to be forgotten”). Therefore a registered member has also other legal rights prescribed by the the EU’s data privacy law , f.i. the right to restrain the usage of personal information in certain situations. Requests must be send to the owner of the register via e-mail. The owner of the register has a right to demand verification of identity if needed. The owner of the register must reply in standard time prescribed by the EU’s data privacy law (mainly within a month)</p>\n\n    </div>\n\n  )\n}\n\nexport default Gdpr;","const syrinx = {\n  name: 'Syrinx Fuksipassi',\n  button: 'btn yellow darken-2',\n  navBackgroundColor:{'background':'#f1dc44'},\n  navTextColor:{'color':'#000'},\n  bodyBackgroundColor:'#93ad20',\n  accentBackgroundColor:{'backgroundColor':'#687a17'},\n  taskButton:{\n    'border': '1px solid #fff',\n    'color': '#fff'\n  },\n  icon_url:'https://www.syrinx.fi/wp-content/uploads/2019/02/copy-syrinx_logoGreenBackgroundveryYellowWithText.png',\n  website_url:'https://www.syrinx.fi',\n  info_1:'Tämä on Syrinx Ry:n virallinen Fuksipassi 2021. Seuraavia tehtäviä suorittamalla saat kaiken irti fuksisyksystäsi ja pääset samalla sukeltamaan osaksi Syrinxin toimintaa!',\n  info_2:'Vaikka fuksipassin täyttämiseen tulee suhtautua omistautuneesti ja asianmukaisella vakavuudella, muista aina tehtäviä suorittaessasi pitää hauskaa ja hakea rennosti uusia kokemuksia. Huom! Osa tehtävistä vaatii suorittajaltaan 18 vuoden ikää.',\n  info_3:'Antoisaa fuksisyksyä!'\n}\n\nconst sporticus = {\n  name: 'Sporticus Fuksipassi',\n  button: 'btn yellow darken-2',\n  navBackgroundColor:{'background':'#000'},\n  navTextColor:{'color':'#f8af2d'},\n  bodyBackgroundColor:'#dfdfdf',\n  accentBackgroundColor:{'backgroundColor':'#fff'},\n  taskButton:{\n    'border': '1px solid #000',\n    'color': '#000'\n  },\n  icon_url:'https://fuksipassisporticus.herokuapp.com/static/img/sporticus_logo.png',\n  website_url:'https://www.sporticus.fi',\n  info_1:'',\n  info_2:'',\n  info_3:''\n}\n\nconst linkkijkl = {\n  name: 'Linkki JKL Fuksipassi',\n  button: 'btn blue darken-3',\n  navBackgroundColor:{'background':'#03076d'},\n  navTextColor:{'color':'#fff'},\n  bodyBackgroundColor:'',\n  accentBackgroundColor:{'backgroundColor':'#fff'},\n  taskButton:{\n    'border': '1px solid #000',\n    'color': '#000'\n  },\n  icon_url:'https://linkkijkl.fi/wp-content/uploads/elementor/thumbs/Logo-pca3kthds2zrj6b0cvdgw50gdi6a0pmkk27nxh41d4.png',\n  website_url:'https://linkkijkl.fi/',\n  info_1:'',\n  info_2:'',\n  info_3:''\n}\n\nexport default {syrinx, sporticus, linkkijkl};","import { useState } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport Info from './components/Info';\nimport Tasks from './components/Tasks';\nimport Policy from './components/Policy';\nimport Setup from './components/Setup';\nimport Frontpage from './components/Frontpage';\nimport Gdpr from './components/Gdpr';\nimport Config from './config/Config';\nimport { useCookies } from 'react-cookie';\n\nimport './css/materialize.min.css';\n\nconst App = () => {\n  const [user, setUser] = useState();\n  const [cookies, setCookie] = useCookies(['useremail','password']);\n  let themes = {\n    '1':Config.syrinx,\n    '2':Config.linkkijkl\n  };\n  console.log(user);\n\n  if (!user) {\n    return (<>\n      <Router>\n        <Switch>\n          <Route path='/syrinx'>\n            <Login setUser={setUser} setCookie={setCookie} cookies={cookies} id_jarj={'1'} theme={Config.syrinx}/>\n          </Route>\n          <Route path='/linkkijkl'>\n            <Login setUser={setUser} setCookie={setCookie} cookies={cookies} id_jarj={'2'} theme={Config.linkkijkl}/>\n          </Route>\n          <Route path='/gdpr'>\n            <Gdpr/>\n          </Route>\n          <Route path='/'>\n            <Frontpage/>\n          </Route>\n        </Switch>\n      \n      </Router>\n      </>\n    );\n  }\n  \n  let theme = themes[user.id_jarj];\n\n  if (user.is_admin) {\n    return (\n    <>\n      <Header setUser={setUser} user={user} setCookie={setCookie} theme={theme}/>\n      <Setup user={user} theme={theme}/>\n    </>);\n  }\n\n  return (\n    <>\n      {user.isnewuser ? <Policy user={user} setUser={setUser}/> : <></>}\n      <Header setUser={setUser} user={user} setCookie={setCookie} theme={theme}/>\n      <Info theme={theme}/>\n      <Tasks user={user} theme={theme}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CookiesProvider } from 'react-cookie';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}