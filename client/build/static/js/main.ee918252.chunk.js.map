{"version":3,"sources":["components/Service.js","components/Login.js","components/Header.js","components/Info.js","components/Task.js","components/Tasks.js","components/Policy.js","components/Requests.js","components/SetupTasks.js","components/SetupUsers.js","components/Setup.js","App.js","index.js"],"names":["url","loginUser","creds","a","fetch","method","headers","body","JSON","stringify","then","data","json","deleteUser","user","fetchTasks","id_jarj","updateTasks","tasks","createTask","task","deleteTask","createRequest","msg","temp","id","user_id","approveRequests","requests","deleteRequest","req","request_id","fetchUsers","fetchSetupData","fetchData","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","parseName","useremail","split","includes","firstName","slice","indexOf","charAt","toUpperCase","lastName","lastIndexOf","length","Login","setUser","theme","setEmail","password","setPassword","errors","setErrors","onSubmit","e","preventDefault","Service","temp_user","bodyBackgroundColor","class","style","navBackgroundColor","href","className","accentBackgroundColor","type","name","placeholder","pattern","required","onChange","target","value","button","Header","direction","colunm_width","push","Grid","container","spacing","item","xs","website_url","src","icon_url","alt","marginTop","navTextColor","onClick","Info","info_1","info_2","info_3","Task","message","setMessage","sended","setSended","approved","setApproved","sendRequest","event","lahetetty","suoritettu","num","kuvaus","Tasks","open","setOpen","setTasks","size","console","log","tehtavat","falses","Object","keys","key","orderNum","sort","b","orderKeys","map","wordWrap","tempOpen","assign","handleClick","taskButton","Policy","handleNo","new_user","isnewuser","Requests","row","setRow","setData","handleSubmit","reqToSubmit","i","j","checked","handleChange","tempData","handleReject","index","newRow","backgroundColor","task_desc","marginLeft","req_text","SetupTasks","Map","types","setTypes","showNew","setShowNew","showNewType","setShowNewType","addedNew","setAddedNew","setNewType","newNum","setNum","newType","setType","newDesc","setDesc","tempTasks","get","parseInt","handleDelete","handleNewTask","submitNewTask","init","handleTypeEdit","tempTypes","set","type_order","handleTypeNew","nextIndex","handleTypeRemove","delete","tempNewTypes","entries","entry","handleSave","async","margin","marginRight","Array","from","defaultValue","borderTop","for","marginBottom","desc","SetupUsers","approved_task_count","task_count","borderBottom","categories","category","approved_type_count","type_count","Math","round","approved_type_percent","TabPanel","props","children","other","role","hidden","useStyles","makeStyles","primary","color","Setup","setValue","contentWidth","Tabs","newValue","textColor","indicatorColor","TabIndicatorProps","background","variant","centered","Tab","label","theme_syrinx","App","is_admin","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee918252.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\n//const url = 'http://127.0.0.1:5000';\nconst url = 'https://fuksipassi-react.herokuapp.com';\n\nconst loginUser = async (creds) => {\n    return fetch(url+'/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(creds)\n    })\n    .then(data => data.json())\n};\n\n\nconst deleteUser = async (user) => {\n    return fetch(url+'/signout', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user)\n    })\n    .then(data => data.json())\n}\n\n\nconst fetchTasks = async (user) => {\n  return fetch(url+'/tasks?jarj_id='+user.id_jarj, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  .then(data => data.json())\n}\n\n\nconst updateTasks = async (tasks) => {  \n  return fetch(url+'/update_tasks', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(tasks)\n  })\n  .then(data => data.json())\n}\n\nconst createTask = async (task) => {\n  return fetch(url+'/create_task', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(task)\n  })\n  .then(data => data.json())\n}\n\nconst deleteTask = async (task) => {\n  fetch(url+'/delete_task', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(task)\n  })\n}\n\nconst createRequest = async (task, user, msg) => {\n  let temp = {};\n  temp['task'] = task.id;\n  temp['user'] = user.user_id;\n  temp['jarj'] = user.id_jarj;\n  temp['message'] = msg;\n  return fetch(url+'/create_request', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(temp)\n  })\n  .then(data => data.json())\n}\n\n\nconst approveRequests = async (user, requests) => {\n  let temp = {};\n  temp['requests'] = requests;\n  temp['user_id'] = user.user_id;\n  fetch(url+'/approve_requests', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(temp)\n  })\n}\n\n\nconst deleteRequest = async (req) => {\n  let temp = {};\n  temp['request_id'] = req.request_id;\n  fetch(url+'/delete_request', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(temp)\n  })\n}\n\nconst fetchUsers = async (user) => {\n  let temp = {};\n  temp['jarj_id'] = user.id_jarj;\n  return fetch(url+'/setup_users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(temp)\n  })\n  .then(data => data.json())\n}\n\nconst fetchSetupData = async (user) => {\n  return fetch(url+'/data_setup', {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n    },\n    body : JSON.stringify(user)\n  })\n  .then(data => data.json())\n}\n\nconst fetchData = async (user) => {\n    return fetch(url+'/data?token='+user.user_id, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(data => data.json())\n}\n\n\nconst parseName = (useremail) => {\n  let temp = useremail.split('@')[0];\n  if (temp.includes('.')) {\n    let firstName = temp.slice(0, temp.indexOf('.'));\n    firstName = firstName.charAt(0).toUpperCase() + firstName.slice(1);\n    let lastName = temp.slice(temp.lastIndexOf('.')+1, temp.length);\n    lastName = lastName.charAt(0).toUpperCase() + lastName.slice(1);\n    return firstName + ' ' + lastName;\n  }\n  return temp;\n}\n\n\n// Hook\nconst useWindowSize = () => {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n  \n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n  \n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n  \n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n  \n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n  \n    return windowSize;\n}\n\nexport default {loginUser, deleteUser, fetchData, useWindowSize, fetchTasks, updateTasks, createTask, deleteTask, createRequest, fetchSetupData, approveRequests, deleteRequest, fetchUsers, parseName};","import React, {useState} from 'react';\nimport Service from './Service';\n\nconst Login = ({ setUser, id_jarj, theme }) => {\n    const [useremail, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [errors, setErrors] = useState();\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        const user = {\n            useremail: useremail,\n            password: password,\n            id_jarj: id_jarj\n        }\n        const temp_user = await Service.loginUser(user);\n        if (temp_user.user_id) {\n            setUser(temp_user);\n        } else {\n            setErrors(true);\n        }\n    }\n\n    return (\n        <div>\n            <style>{'body {background-color:'+theme.bodyBackgroundColor+';'}</style>\n            <div class=\"nav\" style={theme.navBackgroundColor}>\n              <div class=\"row\">\n                <div class=\"center\">\n                    <div class=\"col s12 m2 brand-site\">\n                        \n                    </div>\n                    <div class=\"col s12 m4 offset-m2\">\n                        <a href=\"//\" class=\"\"><h3 class=\"brand-text brand-logo\">Syrinx Fuksipassi</h3></a>\n                    </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"center brand-text\">\n                <h4>Kirjaudu</h4>\n                <p>Anna isamail (yliopiston JYU) sähköposti pitkässä muodossa</p>\n                <p>Esim.</p>\n                <p><i>kalle.h.ankka@student.jyu.fi</i></p>\n            </div>\n            {errors === true && <p class=\"center error\">Väärä sähköposti tai salasana!</p>}\n            <form className=\"kuittaus\" onSubmit={onSubmit} style={theme.accentBackgroundColor}>\n                <input type=\"email\" name=\"useremail\" placeholder=\"Sähköposti\" pattern=\".*@student.jyu.fi\" required onChange={e => setEmail(e.target.value)} />{' '}\n                <input type=\"password\" name=\"password\" placeholder=\"Ainejärjestön Salasana\" id=\"password\" required onChange={e => setPassword(e.target.value)} />{' '}\n                <div class=\"center\">\n                    <input className={theme.button} type=\"submit\" value=\"Kirjaudu\"/>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport Service from './Service';\nimport Grid from '@material-ui/core/Grid';\n\nconst Header = ({setUser, user, theme}) => {\n    const size = Service.useWindowSize();\n    const direction = size.width <= 700 ? \"column\" : \"row\";\n    let colunm_width = [3, 6, 1, 2];\n\n    if (direction === \"column\") {\n        let temp = [];\n        for (let i of colunm_width) {\n            temp.push(0);\n        }\n        colunm_width = temp;\n    }\n\n    const handleLogout = (e) => {\n        setUser();\n    }\n\n    return (\n        <div className=\"nav\" style={theme.navBackgroundColor}>\n            <Grid container spacing={3} direction={direction}>\n                <Grid item xs={colunm_width[0]}>\n                    <div className=\"header\">\n                        <a href={theme.website_url}><img src={theme.icon_url} alt=\"\" className=\"responsive-img\" style={{marginTop:'10px'}}/></a>\n                    </div>\n                </Grid>\n                <Grid item xs={colunm_width[1]} >\n                    <div className=\"header\" style={{'textAlign':'center'}}>\n                        <a href=\"//\" className=\"\"><h3 className=\"brand-logo\" style={theme.navTextColor}>{theme.name}</h3></a>\n                    </div>\n                </Grid>\n                <Grid item xs={colunm_width[2]}>\n                    <div className=\"header\" style={theme.navTextColor}>\n                        {Service.parseName(user.useremail)}\n                    </div>\n                </Grid>\n                <Grid item xs={colunm_width[3]}>\n                    <div className=\"header\">\n                        <button onClick={handleLogout} className={theme.button} name=\"logout-submit\">Kirjaudu ulos</button>\n                    </div>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Info = ({theme}) => {\n    return (\n        <div class=\"center container\">\n            <p class=\"info-text\">{theme.info_1}</p>\n            <p class=\"info-text\">{theme.info_2}</p>\n            <p class=\"info-text info-text-last\">{theme.info_3}</p>\n        </div>\n    )\n}\n\nexport default Info;","import React, {useEffect, useState} from 'react';\nimport Service from './Service';\n\nconst Task = ({task, user, theme}) => {\n    const [message, setMessage] = useState();\n    const [sended, setSended] = useState();\n    const [approved, setApproved] = useState();\n\n    const sendRequest = async event => {\n        event.preventDefault();\n        Service.createRequest(task, user, message);\n        setSended(true);\n    }\n\n    useEffect(() => {\n        setSended(task.lahetetty);\n        setApproved(task.suoritettu);\n    }, []);\n\n    return (\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content center\">\n                <h6>Tehtävä {task.num}</h6>\n                <h5>{task.kuvaus}</h5>\n            </div>\n            <div className=\"card-action center\">\n                {sended & !approved ? <button className=\"btn brand-text grey\">Lähetetty</button> :\n                 approved ? <button className=\"btn brand-text btn-suoritettu\">Suoritettu</button>:\n                <form onSubmit={sendRequest}>\n                    <input type=\"text\" placeholder=\"Viesti / Tutorin nimi\" onChange={e => setMessage(e.target.value)}/>\n                    <button type=\"submit\" className=\"btn brand-text yellow darken-2\">Lähetä</button>\n                </form>  }\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React, {useEffect, useState} from 'react';\nimport Service from './Service';\nimport Task from './Task';\nimport Grid from '@material-ui/core/Grid';\n\nconst Tasks = ({user, theme}) => {\n    const [open, setOpen] = useState();\n    const [tasks, setTasks] = useState([]);\n    const size = Service.useWindowSize();\n    \n    const handleClick = (event, key) => {\n        event.preventDefault();\n        const tempOpen = Object.assign({}, open);\n        tempOpen[key] = !tempOpen[key];\n        setOpen(tempOpen);\n    }\n\n    const orderKeys = (tasks) => {\n        let keys = [];\n        for (let key of Object.keys(tasks)) {\n            keys.push({'name':key, 'orderNum':tasks[key].orderNum});\n        }\n        keys.sort((a,b) => { return a.orderNum > b.orderNum });\n        return keys;\n    }\n\n    useEffect(() => {\n       (async () => {\n            const data = await Service.fetchData(user);\n            console.log(data);\n            setTasks(data.tehtavat);\n            console.log(tasks);\n       })();\n       let falses = {}\n        for (let key of Object.keys(tasks)) {\n            falses[key] = false;\n        }\n        setOpen(falses);\n    }, []);\n\n\n    const direction = size.width <= 700 ? \"column\" : \"row\";\n    const width = size.width <= 700 ? 12 : 6;\n\n    let keys = orderKeys(tasks);\n\n    return (\n        <div className=\"container\">\n            <style>\n                {'body {background-color:'+theme.bodyBackgroundColor+';'}\n            </style>\n            <h4 className=\"center gray-text\" >Tehtävät</h4>\n            {keys.length > 0 ? keys.map((key) => (\n                \n                <div className=\"\" style={{wordWrap: 'break-word'}}>\n                    <button className={`accordion ${open[key.name] ? 'active' : ''}`} type=\"button\" onClick={(event) => handleClick(event, key.name)} style={theme.taskButton}>\n                        <h5>{key.name}</h5>\n                        <br></br>\n                        <h6>{tasks[key.name]['suoritettu']} / {tasks[key.name]['kpl']}</h6>\n                    </button>\n                    <div className={`panel ${open[key.name] ? 'show' : ''}`}>\n                    <Grid container spacing={2} direction={direction}>\n                        {tasks[key.name]['tehtavat'].length > 0 ? tasks[key.name]['tehtavat'].map((task) => (\n                            <Grid key={task.id} item xs={width}>\n                                <Task task={task} user={user} theme={theme}/>\n                            </Grid>\n                        )) : null}\n                    </Grid>\n                    </div>\n                </div>\n            \n\n            )): null}\n        </div>\n    )\n}\n\nexport default Tasks;","import React from 'react';\nimport Service from './Service';\n\nconst Policy = ({user, setUser}) => {\n    const handleYes = e => {\n        const new_user = Object.assign({}, user);\n        new_user.isnewuser = false;\n        setUser(new_user);\n    }\n    \n    const handleNo = async e => {\n        e.preventDefault();\n        const temp_user = {\n            user_id:user.user_id\n        }\n        const ret = await Service.deleteUser(temp_user);\n        setUser();\n    }\n    \n    return (\n        <div>\n            <div className=\"policy\">\n                <h5 className=\"center gray-text\">Luodaanko uusi käyttäjä?</h5>\n                <p className=\"center brand-text\">Email</p>\n                <p className=\"center gray-text\">Luomalla käyttäjän hyväksyt palvelun käyttöehdot sekä <a href=\"./gdpr\">rekisteri- ja tietosuojaselosteen</a></p>\n                <div className=\"center margin-top-bottom\"><button onClick={handleYes} className=\"btn green-syrinx\">Kyllä</button></div>\n                <div className=\"center margin-top-bottom\"><button onClick={handleNo} className=\"btn yellow darken-2\">Ei</button></div>\n                \n            </div>\n            <div className=\"policy-background\"></div>\n        </div>\n    )\n}\n\nexport default Policy;","import { Grid } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react';\nimport Service from './Service';\n\nconst Requests = ({user, theme}) => {\n    const [row, setRow] = useState();\n    const [data, setData] = useState();\n\n    useEffect(() => {\n        (async () => {\n            const data = await Service.fetchSetupData(user);\n            console.log(data);\n            setData(data);\n        })();\n    }, []);\n    \n\n    const handleSubmit = async (event, temp) => {\n        event.preventDefault();\n        let reqToSubmit = [];\n        for (let i of data) {\n            if (i.user_id === temp.user_id) {\n                for (let j of i.requests) {\n                    if (j.checked) {\n                        reqToSubmit.push(j);\n                    }\n                }\n            }\n        }\n        await Service.approveRequests(user, reqToSubmit);\n        (async () => {\n            const data = await Service.fetchSetupData(user);\n            console.log(data);\n            setData(data);\n        })();\n    }\n\n    const handleChange = async (event, temp, req) => {\n        console.log(temp);\n        console.log(req);\n        console.log(event.target.checked);\n\n        let tempData = Object.assign([], data);\n        for (let i of tempData) {\n            if (i.user_id === temp.user_id) {\n                for (let j of i.requests) {\n                    if (j.request_id === req.request_id) {\n                        j.checked = !j.checked;\n                    }\n                }\n            }\n        }\n        setData(tempData);\n    }\n\n    const handleReject = async (event,req) => {\n        event.preventDefault();\n        (async () => {\n            await Service.deleteRequest(req);\n            const data = await Service.fetchSetupData(user);\n            console.log(data);\n            setData(data);\n        })();\n    }\n\n    const handleClick = (event, newRow) => {\n        if (row === newRow) {\n            setRow();    \n        } else {\n            setRow(newRow);\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <ul>\n                    {data !== undefined ? data.map((temp, index) => (\n                        temp.requests.length > 0 ? \n                        <li key={index}>\n                            <div className=\"collapsible-header\" onClick={(event) => handleClick(event, index)}> {Service.parseName(temp.useremail)}</div>\n                            <div className={`${row===index ? 'collapsible-body' : 'hidden'} `} style={{backgroundColor:'#4f4f4f4a'}} >\n                                <form onSubmit={(event) => handleSubmit(event, temp)}>\n                                    <div>\n                                        <button className={theme.button}>Kuittaa valitut</button>\n                                    </div>\n                                    <div>\n                                        <ul>\n                                            {temp.requests.map((req, index) => (\n                                                <li key={index}>\n                                                    <div style={{marginTop:'1rem'}}>\n                                                        <Grid container spacing={3}>\n                                                            <Grid item xs={9}>\n                                                                <div>\n                                                                    <label className=\"brand-text\">\n                                                                        <input type=\"checkbox\" className='yellow-checkbox' checked={req.checked} onChange={(event) => handleChange(event, temp, req)}/>\n                                                                        <span className=\"margin-bottom\">{req.task_desc}</span>\n                                                                        <div className=\"small-margin-left font-13\" style={{marginLeft:'3rem'}}>{req.req_text}</div>\n                                                                    </label>\n                                                                </div>\n                                                            </Grid>\n                                                            <Grid item xs={3}>\n                                                                <button className='btn-small grey' onClick={(event) => handleReject(event, req)}>Hylkää</button>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                </form>\n                            </div>\n                        </li>\n                    : null)) : null} \n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default Requests;","import React, {useEffect, useState} from 'react';\nimport Service from './Service';\n\nconst SetupTasks = ({user, theme}) => {\n  const [tasks, setTasks] = useState([]);\n  const [types, setTypes] = useState(new Map());\n  const [showNew, setShowNew] = useState(false);\n  const [showNewType, setShowNewType] = useState(false);\n  const [addedNew, setAddedNew] = useState(false);\n\n  const [type, setNewType] = useState('');\n\n  const [newNum, setNum] = useState();\n  const [newType, setType] = useState(1);\n  const [newDesc, setDesc] = useState();\n\n\n  const handleChange = async (event, temp) => {\n    console.log(event.target.value);\n    console.log(event.target.id);\n    let tempTasks = Object.assign([], tasks);\n\n    for (let task of tempTasks) {\n      if (task.id === temp.id) {\n        if (event.target.id === 'type') {\n          task[event.target.id] = types.get(parseInt(event.target.value));\n          task['type_order'] = parseInt(event.target.value);\n        } else {\n          task[event.target.id] = event.target.value;\n        }\n      }\n    }\n    console.log(tempTasks);\n    setTasks(tempTasks);\n  };\n\n  const handleDelete = async (event, temp) => {\n    await Service.deleteTask(temp);\n    let tempTasks = [];\n    for (let task of tasks) {\n      if (task.id !== temp.id) {\n        tempTasks.push(task);\n      }\n    }\n    setTasks(tempTasks);\n  };\n\n  const handleNewTask = async event => {\n    setShowNew(!showNew);\n    setNum();\n    setType(1);\n    setDesc();\n  }\n\n  const submitNewTask = async event => {\n    event.preventDefault();\n    (async () => {\n      let temp = {}\n      temp['num'] = parseInt(newNum);\n      temp['type'] = types.get(parseInt(newType));\n      temp['typeOrder'] = parseInt(newType);\n      temp['desc'] = newDesc;\n      temp['jarj_id'] = user.id_jarj;\n      setAddedNew(true);\n      console.log(temp);\n      await Service.createTask(temp);\n      await init();\n    })();\n  };\n\n  const handleTypeEdit = async (event, key) => {\n    event.preventDefault();\n    console.log(event.target[0].value);\n    \n    let tempTypes = new Map(types);\n\n    tempTypes.set(key, event.target[0].value);\n\n    console.log(tempTypes);\n\n    let tempTasks = Object.assign([], tasks);\n    console.log(tempTasks);\n\n    for (let task of tempTasks) {\n      task.type = tempTypes.get(task.type_order);\n    }\n    setTasks(tempTasks);\n    setTypes(tempTypes);\n  }\n\n  const handleTypeNew = async (event, nextIndex) => {\n    if (type === '') return;\n    \n    let tempTypes = new Map(types);\n    tempTypes.set(nextIndex, type);\n\n    console.log(tempTypes);\n    setTypes(tempTypes);\n    setNewType('');\n  }\n\n  const handleTypeRemove = async (event, key) => {\n    let tempTypes = new Map(types);\n\n    tempTypes.delete(key);\n    console.log(tempTypes);\n    setTypes(new Map());\n    let tempNewTypes = new Map();\n    let i = 1;\n    for (let entry of tempTypes.entries()) {\n      console.log(entry);\n      tempNewTypes.set(i, entry[1]);\n      i++;\n    }\n    console.log(tempNewTypes);\n    setTypes(tempNewTypes);\n  }\n\n  const handleSave = async event => {\n    await Service.updateTasks(tasks);\n    await init();\n  }\n\n  const init = async => {\n    (async () => {\n      const data = await Service.fetchTasks(user);\n      let tempData = Object.assign([], data);\n      tempData.sort((a,b) => { return a.num > b.num })\n      console.log(tempData);\n      setTasks(tempData);\n      const tempTypes = new Map();\n      for (let task of data.sort((a,b) => { return a.type_order > b.type_order })) {\n        tempTypes.set(task.type_order, task.type);\n      }\n      setTypes(tempTypes);\n    })();\n  }\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <>\n      <div style={{margin:'1rem', 'paddingBottom':'1rem' , 'overflow-x':'auto','whiteSpace':'nowrap'}}>\n        <button onClick={(event) => handleSave(event)} className={theme.button} style={{marginRight:'1rem'}}>Tallenna muutokset</button>\n        <button onClick={(event) => handleNewTask(event)} className={theme.button}>Lisää tehtävä</button>\n        <button onClick={(event) => setShowNewType(!showNewType)} className={theme.button} style={{marginLeft:'1rem'}}>Lisää kategoria</button>\n      </div>\n      {showNewType ? \n        <div className='collection'>\n          <div className='collection-item' style={{width:'100%', 'padding':'0rem 0rem 0rem 1rem'}}>\n            { types !== undefined ? Array.from(types).map(([key, temp], index) => (\n              <div key={temp}>\n                <form onSubmit={(event => handleTypeEdit(event, key))}>\n                  {key}. \n                  <div className='input-field inline'>\n                    <input type='text' defaultValue={temp}></input>\n                  </div>\n                  <button type='submit' className={`btn-floating `+ theme.button} style={{marginLeft:'1rem'}}><i class=\"material-icons\">save</i></button>\n                  <button onClick={(event) => handleTypeRemove(event, key)} className={`btn-floating `+theme.button} style={{marginLeft:'1rem'}}><i class=\"material-icons\">clear</i></button>\n                </form>\n              </div>\n            )) : null}\n            <div style={{borderTop: '2px solid #c4c4c4'}}>\n              <div className='center'>\n                <p>Lisää kategoria</p>\n              </div>\n              {Array.from(types).length+1}. \n              <div className='input-field inline'>\n                <input type='text' value={type} onChange={(event) => setNewType(event.target.value)}></input>\n              </div>\n              <button onClick={(event) => handleTypeNew(event, Array.from(types).length+1)} className={theme.button} style={{marginLeft:'1rem'}}>Lisää</button>\n            </div>\n          </div>\n        </div> : null}      \n      <div>  \n        {showNew ? \n            <div className='collection'>\n              <div className='collection-item'>\n                <p className='center'>Uusi tehtävä</p>\n                {addedNew ? <p>Uusi tehtävä lisätty!</p> : null}\n                <form onSubmit={submitNewTask}>\n                    <label for=\"num\">Numero</label>\n                    <input id=\"num\" type='number' required onChange={e => {setNum(parseInt(e.target.value));setAddedNew(false);}}></input>\n                    \n                    <label>Kategoria</label>\n                    <div className='input-field'>\n                      <select defaultValue={1} required onChange={e => {setType(e.target.value);setAddedNew(false);}}>\n                        {types !== undefined ? Array.from(types).map(([key, temp], index) => (\n                          <option value={parseInt(key)}>{temp}</option>\n                        )): null}\n                      </select>\n                    </div>\n                    \n                    <label for=\"desc\">Tehtävä</label>\n                    <input id='desc' type='text' required onChange={e => {setDesc(e.target.value);setAddedNew(false);}}></input>\n                    <input className={theme.button} type=\"submit\" value=\"Lisää\"/>\n                </form>\n              </div>\n            </div>\n          : null}\n      </div>\n      <h4 className='center'>Tehtävät</h4>\n      <ul className='collection'>\n        {tasks !== undefined ? tasks.map(temp => (\n          <li key={temp.id} className='collection-item' style={{marginBottom:'0.5rem'}}>\n            <div>\n              <form onChange={(event) => handleChange(event, temp)}>\n                <label for=\"num\">Numero</label>\n                <input id=\"num\" type='number' defaultValue={parseInt(temp.num)}></input>\n                \n                \n                <label>Kategoria</label>\n                <div className='input-field'>\n                  <select defaultValue={temp.type_order} id='type'>\n                    {types !== undefined ? Array.from(types).map(([key, temp], index) => (\n                      <option value={key}>{temp}</option>\n                    )): null}\n                  </select>\n                </div>\n                                \n                \n                \n                <label for=\"desc\">Tehtävä</label>\n                <input id='desc' type='text' defaultValue={temp.desc}></input>\n              </form>\n              <button onClick={(event) => handleDelete(event, temp)} className={theme.button}>Poista tehtävä</button>\n            </div>\n          </li>\n        )): null}\n      </ul>\n    </>\n  )\n}\n\nexport default SetupTasks;","import React, {useEffect, useState} from 'react';\nimport Service from './Service';\n\nconst SetupUsers = ({user, theme}) => {\n  const [row, setRow] = useState();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    (async () => {\n      const data = await Service.fetchUsers(user);\n      console.log(data);\n      setData(data);\n    })();\n  }, []);\n\n  const handleClick = (event, newRow) => {\n    if (row === newRow) {\n        setRow();    \n    } else {\n        setRow(newRow);\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <ul>\n          {data !== undefined ? data.map((temp, index) => (\n            <li key={index}>\n              <div className='collapsible-header' onClick={(event) => handleClick(event, index)}>{Service.parseName(temp.useremail)} - {temp.approved_task_count} / {temp.task_count}</div>\n              <div className={`${row===index ? 'collapsible-body' : 'hidden'}`} style={{backgroundColor:'#4f4f4f4a'}}>\n                <div style={{borderBottom:'2px solid #00000070'}}>\n                  <p>{temp.useremail}</p> <p>Poista käyttäjä</p>\n                </div>\n                \n                <ul>\n                  {temp.categories.map((category, index) => (\n                    <li>\n                      <p>{category.name}:</p><p style={{marginLeft:'1rem'}}> {category.approved_type_count} / {category.type_count} - {Math.round(category.approved_type_percent)}%</p>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </li>\n          )) : null}\n        </ul>\n      </div>\n    </>\n  )\n}\n\nexport default SetupUsers;","import React, {useState} from 'react';\nimport Service from './Service';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Requests from './Requests';\nimport SetupTasks from './SetupTasks';\nimport SetupUsers from './SetupUsers';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <>{children}</>\n        )}\n      </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    primary : {\n        color: 'black'\n    }\n});\n\nconst Setup = ({user, theme}) => {\n    const [value, setValue] = useState(0);\n    const classes = useStyles();\n    const size = Service.useWindowSize();\n    const contentWidth = size.width <= 700 ? \"100%\" : \"75%\";\n\n    const handleTabChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    return (\n        <>\n            <div style={{width: contentWidth, margin: 'auto'}}>\n                <style>\n                    {'body {background-color:'+theme.bodyBackgroundColor+';'}\n                </style>\n                <Tabs value={value} onChange={handleTabChange} textColor=\"primary\" indicatorColor=\"primary\" TabIndicatorProps={{style:{background:'black', 'text-color':'black'}}} variant=\"fullWidth\" centered>\n                    <Tab label=\"Pyynnöt\" style={{color:'rgba(0, 0, 0, 0.7)'}}></Tab>\n                    <Tab label=\"Tehtävät\" style={{color:'rgba(0, 0, 0, 0.7)'}}></Tab>\n                    <Tab label=\"Käyttäjät\" style={{color:'rgba(0, 0, 0, 0.7)'}}></Tab>\n                </Tabs>\n            \n                <TabPanel value={value} index={0}>\n                    <Requests user={user} theme={theme}/>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <SetupTasks user={user} theme={theme}/>\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                    <SetupUsers user={user} theme={theme}/>\n                </TabPanel>\n            </div>\n            \n        </>\n    )\n}\n\nexport default Setup;","import './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport Info from './components/Info';\nimport Tasks from './components/Tasks';\nimport Policy from './components/Policy';\nimport Setup from './components/Setup';\n\nimport './css/materialize.min.css';\nimport { useState } from 'react';\n\nconst theme_syrinx = {\n  name: 'Syrinx Fuksipassi',\n  button: 'btn yellow darken-2',\n  navBackgroundColor:{'background':'#f1dc44'},\n  navTextColor:{'color':'#000'},\n  bodyBackgroundColor:'#93ad20',\n  accentBackgroundColor:{'backgroundColor':'#687a17'},\n  taskButton:{\n    'border': '1px solid #fff',\n    'color': '#fff'\n  },\n  icon_url:'https://www.syrinx.fi/wp-content/uploads/2019/02/copy-syrinx_logoGreenBackgroundveryYellowWithText.png',\n  website_url:'https://www.syrinx.fi',\n  info_1:'Tämä on Syrinx Ry:n virallinen Fuksipassi 2020. Seuraavia tehtäviä suorittamalla saat kaiken irti fuksisyksystäsi ja pääset samalla sukeltamaan osaksi Syrinxin toimintaa!',\n  info_2:'Vaikka fuksipassin täyttämiseen tulee suhtautua omistautuneesti ja asianmukaisella vakavuudella, muista aina tehtäviä suorittaessasi pitää hauskaa ja hakea rennosti uusia kokemuksia.',\n  info_3:'Antoisaa fuksisyksyä!'\n}\n\nconst theme_sporticus = {\n  name: 'Sporticus Fuksipassi',\n  button: 'btn yellow darken-2',\n  navBackgroundColor:{'background':'#000'},\n  navTextColor:{'color':'#f8af2d'},\n  bodyBackgroundColor:'#dfdfdf',\n  accentBackgroundColor:{'backgroundColor':'#fff'},\n  taskButton:{\n    'border': '1px solid #000',\n    'color': '#000'\n  },\n  icon_url:'https://fuksipassisporticus.herokuapp.com/static/img/sporticus_logo.png',\n  website_url:'https://www.sporticus.fi',\n  info_1:'',\n  info_2:'',\n  info_3:''\n}\n\nconst App = () => {\n  const [user, setUser] = useState();\n\n  let theme = theme_syrinx;\n  console.log(user);\n\n  if (!user) {\n    return (<>\n      <Router>\n        <Switch>\n          <Route path='/syrinx'>\n            <Login setUser={setUser} id_jarj={'1'} theme={theme_syrinx}/>\n          </Route>\n          <Route path='/'>\n            <p>Public frontpage</p>\n          </Route>\n        </Switch>\n      \n      </Router>\n      </>\n    );\n  }\n  \n  if (user.is_admin) {\n    return (\n    <>\n      <Header setUser={setUser} user={user} theme={theme}/>\n      <Setup user={user} theme={theme}/>\n    </>);\n  }\n\n  return (\n    <>\n      {user.isnewuser ? <Policy user={user} setUser={setUser}/> : <></>}\n      <Header setUser={setUser} user={user} theme={theme}/>\n      <Info theme={theme}/>\n      <Tasks user={user} theme={theme}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}